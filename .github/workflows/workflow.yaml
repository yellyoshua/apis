name: Flow
on:
  push:
    branches: [master]

jobs:
  films-service:
    runs-on: ubuntu-latest
    name: Deploy (films-service)
    steps:
      - uses: actions/checkout@master
      - uses: actions/setup-node@v2
        with:
          node-version: 16.13.x

      - name: Install packages
        working-directory: services/films
        run: yarn install

      # - name: Unit test's
      #   working-directory: services/films
      #   run: yarn run test

      - name: Build APP
        working-directory: services/films
        run: yarn run build

      - name: Deploy Worker
        working-directory: services/films
        run: npx -y wrangler publish
        env:
          CLOUDFLARE_ACCOUNT_ID: ${{ secrets.CF_ZONE_ID }}
          CLOUDFLARE_API_TOKEN: ${{ secrets.CF_WORKERS_API_TOKEN }}

  periodic-table:
    runs-on: ubuntu-latest
    name: Deploy (periodic-table)
    steps:
      - uses: actions/checkout@master
      - uses: actions/setup-node@v2
        with:
          node-version: 16.13.x

      - name: Install packages
        working-directory: services/periodic-table
        run: yarn install

      # - name: Unit test's
      #   working-directory: services/periodic-table
      #   run: yarn run test

      - name: Build APP
        working-directory: services/periodic-table
        run: yarn run build

      - name: Deploy Worker
        working-directory: services/periodic-table
        run: npx -y wrangler publish
        env:
          CLOUDFLARE_ACCOUNT_ID: ${{ secrets.CF_ZONE_ID }}
          CLOUDFLARE_API_TOKEN: ${{ secrets.CF_WORKERS_API_TOKEN }}

  globish-service:
    runs-on: ubuntu-latest
    name: Deploy (globish-service)
    steps:
      - uses: actions/checkout@master
      - uses: actions/setup-node@v2
        with:
          node-version: 16.13.x

      - name: Install packages
        working-directory: services/globish
        run: yarn install

      # - name: Unit test's
      #   working-directory: services/globish
      #   run: yarn run test

      - name: Build APP
        working-directory: services/globish
        run: yarn run build

      - name: Deploy Worker
        working-directory: services/globish
        run: npx -y wrangler publish
        env:
          CLOUDFLARE_ACCOUNT_ID: ${{ secrets.CF_ZONE_ID }}
          CLOUDFLARE_API_TOKEN: ${{ secrets.CF_WORKERS_API_TOKEN }}

  honeygain-cron:
    runs-on: ubuntu-latest
    name: Deploy (honeygain-cron)
    steps:
      - uses: actions/checkout@master
      - uses: actions/setup-node@v2
        with:
          node-version: 16.13.x

      - name: Install packages
        working-directory: crons/honeygain
        run: yarn install

      # - name: Unit test's
      #   working-directory: crons/honeygain
      #   run: yarn run test

      - name: Build APP
        working-directory: crons/honeygain
        run: yarn run build

      - name: Deploy Worker
        working-directory: crons/honeygain
        run: npx -y wrangler publish
        env:
          CLOUDFLARE_ACCOUNT_ID: ${{ secrets.CF_ZONE_ID }}
          CLOUDFLARE_API_TOKEN: ${{ secrets.CF_WORKERS_API_TOKEN }}

  badbunnyconcertecuador-service:
    runs-on: ubuntu-latest
    name: Deploy (badbunnyconcertecuador-service)
    steps:
      - uses: actions/checkout@master
      - uses: actions/setup-node@v2
        with:
          node-version: 16.13.x

      - name: Install packages
        working-directory: services/badbunnyconcertecuador
        run: yarn install

      # - name: Unit test's
      #   working-directory: services/badbunnyconcertecuador
      #   run: yarn run test

      - name: Build APP
        working-directory: services/badbunnyconcertecuador
        run: yarn run build

      - name: Deploy Worker
        working-directory: services/badbunnyconcertecuador
        run: npx -y wrangler publish
        env:
          CLOUDFLARE_ACCOUNT_ID: ${{ secrets.CF_ZONE_ID }}
          CLOUDFLARE_API_TOKEN: ${{ secrets.CF_WORKERS_API_TOKEN }}
